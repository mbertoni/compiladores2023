
Before Elabing: LetDecl P (orden_de_impresion,__Nat__) NoRec [] Pnt "uno! " Par Pnt "dos! " Lit 3

Environment: []

Raw: Pnt _ (S {unS = "uno! "}) (Pnt _ (S {unS = "dos! "}) (Lit _ (N {unN = 3})))

TypeChecked: Decl {pos = _, name = "orden_de_impresion", body = Pnt (_,Nat) (S {unS = "uno! "}) (Pnt (_,Nat) (S {unS = "dos! "}) (Lit (_,Nat) (N {unN = 3})))}

Evaling: 
dos! 3
uno! 3

After Evaling: Lit (_,Nat) (N {unN = 3})

Before Elabing: LetDecl P (f,__Nat__ -> __Nat__) NoRec [] Fun ((x :| [],__Nat__) :| []) IfZ Var x Pnt "uno! " Lit 1 Pnt "dos! " Lit 2

Environment: []

Raw: Lam _ "x" Nat |IfZ _ (Var _ (Bound 0)) (Pnt _ (S {unS = "uno! "}) (Lit _ (N {unN = 1}))) (Pnt _ (S {unS = "dos! "}) (Lit _ (N {unN = 2})))|

TypeChecked: Decl {pos = _, name = "f", body = Lam (_,Arrow Nat Nat) "x" Nat |IfZ (_,Nat) (Var (_,Nat) (Bound 0)) (Pnt (_,Nat) (S {unS = "uno! "}) (Lit (_,Nat) (N {unN = 1}))) (Pnt (_,Nat) (S {unS = "dos! "}) (Lit (_,Nat) (N {unN = 2})))|}

Evaling: 

After Evaling: Lam (_,Arrow Nat Nat) "x" Nat |IfZ (_,Nat) (Var (_,Nat) (Bound 0)) (Pnt (_,Nat) (S {unS = "uno! "}) (Lit (_,Nat) (N {unN = 1}))) (Pnt (_,Nat) (S {unS = "dos! "}) (Lit (_,Nat) (N {unN = 2})))|

Before Elabing: LetDecl P (test,__Nat__) NoRec [] Let P (a,__Nat__) NoRec [] App Var f Lit 0 Let P (b,__Nat__) NoRec [] App Var f Lit 1 Lit 0

Environment: []

Raw: Let _ "a" Nat (App _ (Var _ (Global "f")) (Lit _ (N {unN = 0}))) |Let _ "b" Nat (App _ (Var _ (Global "f")) (Lit _ (N {unN = 1}))) |Lit _ (N {unN = 0})||

TypeChecked: Decl {pos = _, name = "test", body = Let (_,Nat) "a" Nat (App (_,Nat) (Var (_,Arrow Nat Nat) (Global "f")) (Lit (_,Nat) (N {unN = 0}))) |Let (_,Nat) "b" Nat (App (_,Nat) (Var (_,Arrow Nat Nat) (Global "f")) (Lit (_,Nat) (N {unN = 1}))) |Lit (_,Nat) (N {unN = 0})||}

Evaling: 
uno! 1
dos! 2

After Evaling: Lit (_,Nat) (N {unN = 0})
